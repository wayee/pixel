package mm.pixel{		import flash.display.BitmapData;	import flash.display.DisplayObject;	import flash.display.MovieClip;	import flash.geom.Matrix;	import flash.geom.Rectangle;	import flash.utils.getQualifiedClassName;		import mm.pixel.utils.PxFrameInfo;	import mm.pixel.utils.PxG;	import mm.pixel.utils.PxU;
	/**	 * 多帧动画对象	 *  	 * @author Andy Cai <huayicai@gmail.com>	 * 	 */	public dynamic class PxClip extends PxSprite	{			protected var _frame:int;		protected var animation:Vector.<PxFrameInfo> = new Vector.<PxFrameInfo>;		protected var isPlaying:Boolean = true;				public function PxClip( displayObject:DisplayObject )		{  			super( displayObject );		}				protected override function parseClip( displayObject:DisplayObject ):void		{			animation = PxU.movieClipToBitmapMovie(displayObject, true, 0x0);						bitmapData = animation[ _frame ].bitmapData;		}				public function get currentFrame():int		{			return _frame + 1;		}				public function get totalFrames():int		{			return animation.length;		}				public function nextFrame():void		{			_frame = Math.min( _frame + 1, totalFrames - 1 );			isPlaying = false;		}				public function prevFrame():void		{			_frame = Math.max( _frame - 1, 0 );			isPlaying = false;		}				public function play():void		{			isPlaying = true;		}				public function stop():void		{			isPlaying = false;		}				public function gotoAndPlay( frame:int ):void		{			if ( frame < 0 ) 			{				_frame = 0; 			}			else if ( frame > totalFrames - 1 )			{				_frame = totalFrames - 1;			}			else			{				_frame = frame;			}			isPlaying = true;		}				public function gotoAndStop( frame:int ):void		{			if ( frame < 0 ) 			{				_frame = 0; 			}			else if ( frame > totalFrames - 1 )			{				_frame = totalFrames - 1;			}			else			{				_frame = frame;			}			isPlaying = false;						width 	= animation[ _frame ].bitmapData.width;			height 	= animation[ _frame ].bitmapData.height;		}				public override function update():void		{			if ( isPlaying )			{				if ( _frame < totalFrames - 2 ) // 1|2?				{					_frame++;				}				else				{					_frame = 0;				}			}						bitmapData = animation[ _frame ].bitmapData;			super.update();		}	}}